#!/bin/bash
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#

# to use the dnssd zeroconf discovery, you will need to have run the equivalent of
# apt-get install ruby ruby-dev build-essential libavahi-compat-libdnssd-dev
# gem install technomancy-dnssd -s http://gems.github.com
# gem install auser-macmap -s http://gems.github.com
# gem install ause-columbus -s http://gems.github.com

# By default this script does nothing.
sleep 3

# and/or public key using the file in the ephemeral store
if [ -s /mnt/openssh_id.pub ] ; then
  cat /mnt/openssh_id.pub >> /root/.ssh/authorized_keys
  chmod 600 /root/.ssh/authorized_keys
fi

if [ -e /tmp/my-key ] ; then
  rm /tmp/my-key
fi

# METADATA_SERVER="<%= ::MetaVirt::MetadataServer::SERVER_URI %>"
CLIENT=$(which columbus-client)
IP=$($CLIENT -s columbus-server -q description)
METADATA_SERVER="$(echo -n $IP):3000"
# echo $METADATA_SERVER

count=0
until [ $count -ge 10 ] ; do
  echo "attempt $count to register"
#  $counter = `expr $counter + 1`
  let "count+=1"
  ifconfig -a >/tmp/ifconfig.log
  wget -O /tmp/my-key --post-file=/tmp/ifconfig.log $METADATA_SERVER/instances/booted

  if [ ! -d /root/.ssh ] ; then
    mkdir -p /root/.ssh
  fi
  chmod 700 /root/.ssh
  echo "fetching: $METADATA_SERVER/1.0/meta-data/public-keys/0/openssl"
  # Fetch public key using HTTP
  if [ ! -s /tmp/my-key ] ; then
    wget -O /tmp/my-key $METADATA_SERVER/1.0/meta-data/public-keys/0/openssl 
  fi

  if [ $? -eq 0 ] ; then
    if [ -s /tmp/my-key ] ; then
      echo >>/root/.ssh/authorized_keys
      cat /tmp/my-key >> /root/.ssh/authorized_keys
      echo "retreived public key:"
      cat /tmp/my-key
      echo  ' \n'
      chmod 600 /root/.ssh/authorized_keys
      rm /tmp/my-key
      exit 0
    fi
  fi
  sleep 1
done
exit 1